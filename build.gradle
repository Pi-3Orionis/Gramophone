buildscript {
  repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
  }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = "${version_mod}"
group = "com.keykeepers.${id_mod}-${version_minecraft}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${id_mod}"

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
  // Simply re-run your setup task after changing the mappings to update your workspace.
  mappings channel: 'snapshot', version: '20201028-1.16.3'
  runs {
    client {
      workingDirectory project.file('run')

      // Recommended logging data for a userdev environment
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

      // Recommended logging level for the console
      property 'forge.logging.console.level', 'debug'

      mods {
        gramophone {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file('run')

      // Recommended logging data for a userdev environment
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

      // Recommended logging level for the console
      property 'forge.logging.console.level', 'debug'

      mods {
        gramophone {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file('run')

      // Recommended logging data for a userdev environment
      property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

      // Recommended logging level for the console
      property 'forge.logging.console.level', 'debug'

      // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
      args '--mod', 'gramophone', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

      mods {
        gramophone {
          source sourceSets.main
        }
      }
    }
  }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
  maven {	name = "BlameJared"; url = "https://maven.blamejared.com/" } // IE files
}

dependencies {
  minecraft "net.minecraftforge:forge:${version_minecraft}-${version_forge}"
  compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}")

  // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
  // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

  // These dependencies get remapped to your current MCP mappings
  // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

  // For more info...
  // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
  // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

jar {
  manifest {
    attributes([
        "Specification-Title"     : "${id_mod}",
        "Specification-Vendor"    : "Keykeepers Interactive",
        "Specification-Version"   : "1",
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : "${version_mod}",
        "Implementation-Vendor"   : "Keykeepers Interactive",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact jar
    }
  }
  repositories {
    maven {
      url "file:///${project.projectDir}/mcmodsrepo"
    }
  }
}